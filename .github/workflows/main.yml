name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:

env:
  variable_hola: "HOLA"

jobs:
  test_jest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout git
      uses: actions/checkout@v4

    - name: Instalar dependencias
      run: |
        npm install

    - name: Pruebas jest
      run: |
        npm run test

  test_cypress:  
    runs-on: ubuntu-latest

    steps:
    - name: Checkout git
      uses: actions/checkout@v4

    - name: Pruebas Cypress
      env:
        variable_mundo: "MUNDO"
      run: |
        echo "Corriendo pruebas Cypress..."
        echo "Pruebas correctas! Todo bien!"
        echo "No tienes instalado Cypress! Tonto!"
        echo ${{ vars.EXAMPLE }}
        echo $variable_hola $variable_mundo
        echo $GITHUB_REF
        exit 0

  sonarcloud:
  name: SonarCloud
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_artifact:
    runs-on: ubuntu-20.04
    needs: [test_jest, test_cypress]
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout git
      uses: actions/checkout@v4
      
    - name: Dependencien and Building
      run: |
        npm install
        npm run build

    - name: Subir artefacto
      uses: actions/upload-artifact@v3
      with:
        name: Build
        path: build

  build_docker_image_and_push_to_docker_hub:
    runs-on: ubuntu-20.04
    needs: [test_jest, test_cypress]
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout git
      uses: actions/checkout@v4

    - name: QEMU
      uses: docker/setup-qemu-action@v3

    - name: Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.CESAR_DOCKERHUB_USERNAME }}
        password: ${{ secrets.CESAR_DOCKERHUB_PASSWORD }}

    - name: Generar imagen docker y push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: cesarill/react-app:latest

